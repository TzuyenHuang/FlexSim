setviewtext(systemwindow(1), "");
setviewtext(systemwindow(2), "");
setviewtext(systemwindow(3), "");
for(int n = content(model()); n > 1; n--){
	destroyobject(rank(model(), n));
}

Object source = Object.create("Source");
Object Source = Model.find("Source");
source.location = Vec3(0, 0, 0);

Storage.Object rack = Object.create("Rack");
Object Rack = Model.find("Rack");
rack.location = Vec3(5, 0, 0);

Object queue = Object.create("Queue");
Object Queue = Model.find("Queue");
queue.location = Vec3(15, 0, 0);

contextdragconnection(Source, Rack, "A");
contextdragconnection(Rack, Queue, "A");

TaskExecuter asrsvehicle = Object.create("ASRSvehicle");
Object ASRSvehicle = Model.find("ASRSvehicle");
asrsvehicle.location = Vec3(0, -5, 0);

contextdragconnection(Source, ASRSvehicle, "S");
contextdragconnection(Rack, ASRSvehicle, "S");

Source.setProperty("UseTransport", 1);
Rack.setProperty("UseTransport", 1);

Map dimensions = Rack.getProperty("Dimensions");
dimensions.NumBays = 2;
dimensions.NumLevels = 3;
dimensions.SlotsPerBay = 1;
Rack.setProperty("Dimensions",dimensions);

//assigned item to (2, 3, 1)
Source.setProperty("ArrivalStyle", 2);
Table sourceArrivals = source.find(">variables/schedule");
sourceArrivals[1][3] = 1;

source.setProperty("Triggers.OnCreation", "Object current = ownerobject(c);\n\
Object item = param(1);\n\
int rownumber = param(2);\n\
Storage.Item(item).as(Storage.Item).assignedSlot = current.outObjects[1].as(Storage.Object).getSlot(2, 3, 1);");


//first item -> (2, 3, 1), second item -> (1, 2, 1)
/*Source.setProperty("ArrivalStyle", 2);
Table sourceArrivals = source.find(">variables/schedule");
sourceArrivals[1][3] = 1;
sourceArrivals.addRow();
sourceArrivals[2][1] = 0;
sourceArrivals[2][2] = "Product";
sourceArrivals[2][3] = 1;

source.setProperty("Triggers.OnCreation", "Object current = ownerobject(c);\n\
Object item = param(1);\n\
int rownumber = param(2);\n\
if(rownumber == 1) Storage.Item(item).as(Storage.Item).assignedSlot = current.outObjects[1].as(Storage.Object).getSlot(2, 3, 1);\n\
if(rownumber == 2) Storage.Item(item).as(Storage.Item).assignedSlot = current.outObjects[1].as(Storage.Object).getSlot(1, 2, 1);\n");
*/

//6 items store in each slots
/*Source.setProperty("ArrivalStyle", 2);
Table sourceArrivals = source.find(">variables/schedule");
sourceArrivals[1][3] = 1;
for(int i = 2; i <= 6; i++){
	sourceArrivals.addRow();
	sourceArrivals[i][1] = 0;
	sourceArrivals[i][2] = "Product";
	sourceArrivals[i][3] = 1;
}

source.setProperty("Triggers.OnCreation", "Object current = ownerobject(c);\n\
Object item = param(1);\n\
int rownumber = param(2);\n\
int count = 0;\n\
for (int i = 1; i <= 2; i++) {\n\
	for (int j = 1; j <= 3; j++) {\n\
		for (int k = 1; k <= 1; k++) {\n\
			print(i, j, k);\n\
			count++;\n\
			if(rownumber == count) Storage.Item(item).as(Storage.Item).assignedSlot = current.outObjects[1].as(Storage.Object).getSlot(i, j, k);\n\
		}\n\
	}\n\
}\n");
*/
